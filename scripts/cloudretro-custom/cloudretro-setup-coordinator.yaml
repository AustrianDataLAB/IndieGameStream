#
#
# The following yaml script will install a cloud-retro setup in your Kubernetes cluster
# with the needed services. With an invalid configuration of course, for this to properly work
# You need the apply-config.sh minimalistic shell script to update the config with the unclear addresses.
# 
#
# In short, no touching.
#
apiVersion: v1
kind: Namespace
metadata:
  name: cloudretro
---
# Configmap for Coordinator
apiVersion: v1
kind: ConfigMap
metadata:
  name: cloudretro-config-c
  namespace: cloudretro
  labels:
    app: coordinator
data:
  CLOUD_GAME_COORDINATOR_DEBUG: "false"
  CLOUD_GAME_WEBRTC_LOGLEVEL: "6"
---
# Coordinator deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: coordinator-deployment
  namespace: cloudretro
spec:
  replicas: 1
  selector:
    matchLabels:
      app: coordinator
  template:
    metadata:
      labels:
        app: coordinator
    spec:
      containers:
      - name: coordinator
        image: ghcr.io/giongto35/cloud-game/cloud-game:v3.0.5
        envFrom:
          - configMapRef:
              name: cloudretro-config-c
        command: ["./coordinator"]
        ports:
        - containerPort: 8000
        volumeMounts:
        - name: game-mount
          mountPath: '/usr/local/share/cloud-game/assets/games/anguna.gba'
      volumes:
      - name: game-mount
        hostPath:
          path: '/games/anguna.gba'
          type: File
---
# Coordinator LoadBalancer for HTTP
apiVersion: v1
kind: Service
metadata:
  name: coordinator-lb-svc
  namespace: cloudretro
spec:
  selector:
    app: coordinator
  ports:
    - port: 8000
      targetPort: 8000
      #nodePort: 30001
  type: LoadBalancer