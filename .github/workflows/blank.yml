name: CI

on:
  push:
    branches:
      - develop
      - test-pipeline

  pull_request:
    branches:
      - develop
      - main

  workflow_dispatch:
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: austriandatalab/indiestream-frontend
jobs:
  test_frontend:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results

    defaults:
      run:
        working-directory: ./frontend/indiestream

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          # needed because project is not in root
          cache-dependency-path: ./frontend/indiestream/package-lock.json
          cache: 'npm'

      - name: Install dependencies
        run: npm run ci:install

      - name: Audit dependencies
        run: npm run ci:audit

      - name: Build
        run: npm run build

      - name: Test
        run: npm run test -- --configuration=ci

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: always()
        with:
          report_paths: "**/reports/unit/**/*.xml"

      - name: Login to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=match,pattern=\d.\d.\d.*
            type=sha

      - name: Build and push Docker image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}


      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}'
          format: 'sarif'
          #format: 'table'
          #output: 'stdout'
          output: 'trivy-results.sarif'
          exit-code: '1'
          #ignore-unfixed: true
          severity: 'CRITICAL,HIGH'
